# const admin = require("firebase-admin");
# const serviceAccount = require("./serviceAccount.json");

# try {
#   if (!admin.apps.length) {
#     admin.initializeApp({
#       credential: admin.credential.cert(serviceAccount),
#       databaseURL: `https://${serviceAccount.project_id}-default-rtdb.firebaseio.com`,
#       storageBucket: `${serviceAccount.project_id}.appspot.com`
#     });
#   }

#   const db = admin.firestore();
#   const bucket = admin.storage().bucket();
  
#   console.log("✅ Firebase Admin initialized successfully");
#   module.exports = { admin, db, bucket };
# } catch (error) {
#   console.error("❌ Error initializing Firebase Admin:", error.message);
#   process.exit(1);
# }


# Firebase Admin SDK Configuration
FIREBASE_ADMIN_TYPE=service_account
FIREBASE_ADMIN_PROJECT_ID=campus-grubhub-9e02c
FIREBASE_ADMIN_PRIVATE_KEY_ID=98d98f11acdcbaf7d9298273ae3fb0584738c4dd
FIREBASE_ADMIN_CLIENT_EMAIL=firebase-adminsdk-fbsvc@campus-grubhub-9e02c.iam.gserviceaccount.com
FIREBASE_ADMIN_CLIENT_ID=117729802475296717339
FIREBASE_ADMIN_AUTH_URI=https://accounts.google.com/o/oauth2/auth
FIREBASE_ADMIN_TOKEN_URI=https://oauth2.googleapis.com/token
FIREBASE_ADMIN_AUTH_PROVIDER_CERT_URL=https://www.googleapis.com/oauth2/v1/certs
FIREBASE_ADMIN_CLIENT_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-fbsvc%40campus-grubhub-9e02c.iam.gserviceaccount.com
FIREBASE_ADMIN_UNIVERSE_DOMAIN=googleapis.com

# Private Key (keep the \n as literal newlines in .env file)
FIREBASE_ADMIN_PRIVATE_KEY=-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDEMeVOgnKi1TiN
kKZ2F9yz8uIVjBYeQu6xnjxDUShPZIB0F1for+W8cLqMGodZNnJAhDKXNpwrrccw
7pyAwe0QHrgvaYAMLnvhnj0t/n4Uu7S4GdH7FpbDsLIpp5pN6V6qeTNKMdbpEXWF
i6bYMa4l2cRLR1UHU3WIrysSq5O5jcD/RjQdfDvyJXNC3llFk9UjDpRKioIg/Cfb
q3/HPw4swvALSmuPEvRjuQz4pijf5Rg/AYL5+XOmHudmt3lidz5UBXPV6lL0NWyd
GPRdSB77vec1+rMESwAl2/BGGGrZK7sN3shYn/Fq7H5RS0ZMhGh2rEM6tHYES7qq
hEIqBaUpAgMBAAECggEAA3FMhgtErkNaHSTMwPLOqE3X8Ptuv2xFUof1jtOqRrNb
dtNaiJO+jvG2RO3/Ej4Mn5caPqbtCFisejkI9WWXDpglZffpUOgSEShKR/JzXVMv
sCZ21buvR02ES3YRtMcw+6zfAnt7pdu3htF89YXwpEt3tepGuAyl5IaOAE4TAbeu
y0XqW1nzzCA6T6zYF+UL8orMI0Xb6mk6KSokqeY8D8qRN7VSgib/uyJLGGL7Q7yw
F7xJsSTgpxaTAC21D8jFsP2r2b1VA6f4yISdbUFh0+Eho3G5h41yhh7J/TFTqh3o
fthFqpDv1UGF2vVtZM6t4yiYKBzqzdpWofAwBaR4UQKBgQDr/64AEY8oUltTl6XU
+Em11eFIxJ+pTCD5M8B852Zh9UCgXQkkVv5b6H7902uOQtesgMuccO/mlTad70fF
3VD46v5ouwMb526p9jZ6RR8EZNPMByPz6uoWzFwuwXNFRjCP23rRu4Ex417eYFQv
gT2KAM4Ah0uk5/g74o3fXywBcQKBgQDU0p3OApmgj25O7BtXMll9efYOJhKBSG/K
cAK4lcsVTgLQlrHywDyeUGLeGhJcMe2+wk8lhe7avTVnZgtjAkmukODv33hg/OsF
9WhWaWvOM5lzM6fTmgTji+hhSW7VDhmPCi+I3NI6QB21Do6Cs6BHzbQwpCmMFfDJ
V67cTgUDOQKBgHXPcUE/gsOSOV0FexdRyxom5wu4fCu7gUpl91Vi/s0v7U8goout
kdS3v41emXavD5NhyEMUbe4h1t4IsT+pN97LEK2fjfHEGo5mBtQK5W0AGGrltaDy
SGGRKwN8NtsCKwPlgO5qOBh7dMR2OhBs6BeYRz4kTDLKSjU656/2hrVBAoGBAMmT
u/g2qkBT2k1SgQr0G6Mnc5EvKnPdolUCBvHCn5pMS4o6Uc31mvTwetSXqTA98kuu
S7zkwLnaYMzQ8JQUxKldfFB3P9PNeuYn7W17aKrkYMGm+Z0I0vybtb0ACsQuGLNN
HzvewfFVt35La5KaNPZ2IQB2YBf/7MVJAByvXixAoGAV9nmQtqhf8y98vXqRnWH
I6RPn+pgpWK67mrglKkLqon1F4w/H2wtD9ag06Yyu5QH3mLWqCr/2qefq7ba4BGs
kdfzHAUzzMW1xK/6krqXIAbGJa/uho8vRQYmYrnqhpyck0TPk3caM+Qhbzcq8Z1B
Lr9Obiocx+no+WmR/VHhO8w=
-----END PRIVATE KEY-----